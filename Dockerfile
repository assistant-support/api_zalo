# =========================
# Stage 1: ·∫¢nh base (Node Alpine)
# =========================
FROM node:22-alpine AS base
WORKDIR /app
# Th∆∞ vi·ªán hay d√πng v·ªõi Next/Sharp tr√™n Alpine
RUN apk add --no-cache libc6-compat

# =========================
# Stage 2: C√†i deps (bao g·ªìm devDeps) ƒë·ªÉ build
# =========================
FROM base AS deps
COPY package.json package-lock.json ./
RUN npm ci

# =========================
# Stage 3: Build Next.js
# =========================
FROM base AS builder
# D√πng node_modules t·ª´ stage deps
COPY --from=deps /app/node_modules ./node_modules
# Copy to√†n b·ªô m√£ ngu·ªìn ƒë·ªÉ build
COPY . .
# Build production
RUN npm run build

# =========================
# Stage 4: Image ch·∫°y production
# =========================
FROM node:22-alpine AS runner
WORKDIR /app
RUN apk add --no-cache libc6-compat

ENV NODE_ENV=production
ENV PORT=4003
# (tu·ª≥ b·∫°n) t·∫Øt telemetry c·ªßa Next
ENV NEXT_TELEMETRY_DISABLED=1

# T·∫°o user kh√¥ng ph·∫£i root
RUN addgroup --system --gid 1001 nodejs \
  && adduser --system --uid 1001 nextjs

# C√†i production dependencies
COPY package.json package-lock.json ./
RUN npm ci --omit=dev

# Copy artefact build + code c·∫ßn cho server runtime
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/lib ./lib
COPY --from=builder /app/server.js ./server.js

# üí° FIX CH√çNH: copy th√™m models ƒë·ªÉ server.js import ƒë∆∞·ª£c
COPY --from=builder /app/models ./models

# N·∫øu server.js c√≤n import c√°c th∆∞ m·ª•c backend kh√°c, b·∫°n c√≥ th·ªÉ m·ªü th√™m:
# COPY --from=builder /app/routes ./routes
# COPY --from=builder /app/controllers ./controllers
# COPY --from=builder /app/services ./services
# COPY --from=builder /app/utils ./utils
# COPY --from=builder /app/middleware ./middleware
# COPY --from=builder /app/sockets ./sockets
# COPY --from=builder /app/config ./config

# Ph√¢n quy·ªÅn cho user non-root
RUN chown -R nextjs:nodejs /app
USER nextjs

EXPOSE 4003
CMD ["node", "server.js"]
